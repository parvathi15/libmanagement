import React, { Component } from 'react';
import { Link } from "react-router-dom";
import axios from "axios";
import { Route , withRouter} from 'react-router-dom';
import Moment from 'moment';
var moment = require('moment');

 class Userbooks extends Component {
    constructor(props) {
        super(props);
        console.log(this.props);
      this.state = { 
        atoken: window.localStorage.getItem("MyUser"),
        user:"",
       bookreq:[],
       warningmsg:""
        };
      };

      deleteBook(id) {
        console.log(id);
        axios.delete("http://localhost:2500/requests/" + id).then(response => {
          console.log(response.data);
        });
    
        this.setState({
          bookreq: this.state.bookreq.filter(el => el._id !== id)
        });
      }

      checkSame(date1, date2) {
         return moment(date1).isSame(date2);
       
      }

      dateCompare(date1, date2) {
       console.log(date1)
       console.log(date2)
      
      //  if (date1 === date2) {
      //   this.setState({ warningmsg:"smdbfsnfb" })
      //  } else {
      //   this.setState({ warningmsg:"smdfghsdvhsdvb" })
      //  }
      }

    componentDidMount() {
      const token = JSON.parse(this.state.atoken);
      const reader = token.username
      console.log(reader)
        this.setState({
          user:token.username
        })
        axios
          .get(`http://localhost:2500/requests/user/${reader}`)
          .then(response => {
            console.log(response)
            this.setState({ bookreq: response.data });
            console.log(this.state.bookreq)
          })
          .catch(error => {
            console.log(error);
          });
      }
    render() {
      var moment = require('moment');

        return (
            <div className= "container">
              
<table className="table" style = {{marginTop:"56px",cursor: "pointer"}}>
  <h1>{this.state.user.username}</h1>
<caption>List of users</caption>
          <thead className="thead-light">
            <tr >
              <th>Book No</th>
              <th>Name</th>
              <th>Author</th>
              <th>Subject</th>
              <th>Last Date</th>
              <th>Actions</th>
            </tr>
          </thead>
<tbody>
{this.state.bookreq.map(book => {
  const dateTime = Moment(book.date).format('MM-DD-YYYY')
  const todayDateFormat = Moment(new Date()).format('MM-DD-YYYY');
this.dateCompare(dateTime,todayDateFormat)
var bool1 = this.checkSame(dateTime,todayDateFormat)
console.log(bool1)

  return (
  
<tr>
<td >{book.bookid}</td>
<td>{book.title}</td>
<td>{book.author}</td>
<td>{book.subject}</td>
<td>{dateTime}</td>
{dateTime !== todayDateFormat ?(
<td>
  <button className='btn btn-danger' onClick={() => {
          this.deleteBook(book._id);
        }}>Cancel</button>
  
    </td>
):(
  <td>Return Book</td> 
)}

</tr>
  )
  
})}
</tbody>
{/* {bool1 === true ?(
    <p className='warning-msg'>Your request is Successful</p>
 ):(
  <p></p>
 )} */}
</table> 
 
            </div>
        )
    }
}

export default withRouter(Userbooks)
